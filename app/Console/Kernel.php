<?php
/**
 * Author: Damian Schwyrz <mail@damianschwyrz.de>
 * URL: https://www.damianschwyrz.de
 * Copyright (c) 2018.
 */

namespace App\Console;

use App\Console\Commands\autoArchiveTargets;
use App\Console\Commands\BruteforceSubdomains;
use App\Console\Commands\ctfr;
use App\Console\Commands\Dirsearch;
use App\Console\Commands\getDNSData;
use App\Console\Commands\GetSubdomainsViaFacebookCTApi;
use App\Console\Commands\massDns;
use App\Console\Commands\NMapPortscan;
use App\Console\Commands\RegularlySearchForNewSubdomainsInActiveProjects;
use App\Console\Commands\Sublister;
use App\Console\Commands\wpscan;
use App\Jobs\updateHttpResponses;
use App\Jobs\updateIPsAndCnames;
use Illuminate\Console\Scheduling\Schedule;
use Illuminate\Foundation\Console\Kernel as ConsoleKernel;

class Kernel extends ConsoleKernel
{
    /**
     * The Artisan commands provided by your application.
     *
     * @var array
     */
    protected $commands = [

        Dirsearch::class,
        NMapPortscan::class,
        Sublister::class,
        massDns::class,
        wpscan::class,
        BruteforceSubdomains::class,
        ctfr::class,
        GetSubdomainsViaFacebookCTApi::class,
        getDNSData::class,
        RegularlySearchForNewSubdomainsInActiveProjects::class,
        autoArchiveTargets::class,
    ];

    /**
     * Define the application's command schedule.
     *
     * @param  \Illuminate\Console\Scheduling\Schedule $schedule
     *
     * @return void
     */
    protected function schedule(Schedule $schedule)
    {
        if (config('ptm.cronjobs.ip_and_cname.update_after_target_added.active')) {
            $schedule->job(new updateIPsAndCnames())->everyMinute();
        }

        if (config('ptm.cronjobs.http_data.update_after_target_added.active')) {
            $schedule->job(new updateHttpResponses())->everyMinute();
        }

        if (config('ptm.cronjobs.regular_subdomain_scan.active')) {
            $schedule->command('cronjob:search-new-subdomains')->twiceDaily(
                config('ptm.cronjobs.regular_subdomain_scan.first_daily_scan_at_hour'),
                config('ptm.cronjobs.regular_subdomain_scan.second_daily_scan_at_hour')
            );
        }

        if (config('ptm.cronjobs.auto_archiving_domains.active')) {
            $schedule->command('cronjob:auto-archive-invalid-targets')->hourly()->withoutOverlapping(10);
        }
    }

    /**
     * Register the Closure based commands for the application.
     *
     * @return void
     */
    protected function commands()
    {
        #require base_path('routes/console.php');
    }
}
