<?php

namespace App\Console\Commands;

use App\AdminNotice;
use App\Jobs\ArchiveHttpStatus0Targets;
use App\Jobs\ArchiveTimedOutTargets;
use App\Jobs\ArchiveUnresolvableHostTargets;
use App\Jobs\ArchiveWithoutIpTargets;
use App\Project;
use Illuminate\Console\Command;

/**
 * Class autoArchiveTargets
 * @package App\Console\Commands
 */
class autoArchiveTargets extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'cronjob:auto-archive-invalid-targets';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Take every target without valid data (after system tried to fetch this data) and archive them.';

    /**
     * Create a new command instance.
     *
     * @return void
     */
    public function __construct()
    {
        parent::__construct();
    }

    /**
     * Execute the console command.
     *
     * @return mixed
     */
    public function handle()
    {
        $projects = Project::active()->get();

        foreach ($projects as $project) {
            ArchiveHttpStatus0Targets::dispatch($project);
            ArchiveUnresolvableHostTargets::dispatch($project);
            ArchiveTimedOutTargets::dispatch($project);
            ArchiveWithoutIpTargets::dispatch($project);

            AdminNotice::create([
                'type'    => 'success',
                'context' => $this->signature,
                'message' => "Execution started",
                'cmd'     => $project->name,
            ]);
        }
    }
}
