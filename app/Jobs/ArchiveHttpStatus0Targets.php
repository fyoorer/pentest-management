<?php

namespace App\Jobs;

use App\AdminNotice;
use App\Project;
use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Foundation\Bus\Dispatchable;
use Illuminate\Queue\InteractsWithQueue;
use Illuminate\Queue\SerializesModels;

class ArchiveHttpStatus0Targets implements ShouldQueue
{
    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;
    /**
     * @var int
     */
    public $timeout = 600;
    /**
     * @var int
     */
    public $tries = 1;
    /**
     * @var \App\Target
     */
    protected $targets;

    /**
     * @var \App\Project
     */
    protected $project;

    /**
     * Create a new job instance.
     *
     * @return void
     */
    public function __construct(Project $project)
    {
        $this->project = $project;
        $this->targets = $this->project->activeTargets()->where("http_status", 0)->get();
    }

    /**
     * Execute the job.
     *
     * @return void
     */
    public function handle()
    {
        foreach ($this->targets as $target) {
            $target->is_archived = 1;
            $target->save();
        }

        if ($this->targets->count() > 0) {
            AdminNotice::create([
                'type'    => 'success',
                'context' => __CLASS__ . " for " . $this->project->name,
                'message' => "Archived " . $this->targets->count() . " targets",
            ]);
        }
    }
}
