<?php
/**
 * Author: Damian Schwyrz <mail@damianschwyrz.de>
 * URL: https://www.damianschwyrz.de
 * Copyright (c) 2018.
 */

namespace App\Jobs;

use App\AdminNotice;
use App\Project;
use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Foundation\Bus\Dispatchable;
use Illuminate\Queue\InteractsWithQueue;
use Illuminate\Queue\SerializesModels;

class ArchiveBySearch implements ShouldQueue
{
    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;
    /**
     * @var int
     */
    public $timeout = 600;
    /**
     * @var int
     */
    public $tries = 1;
    /**
     * @var \App\Target
     */
    protected $targets;

    /**
     * Create a new job instance.
     *
     * @return void
     */
    public function __construct(Project $project, string $column, string $search)
    {
        $this->targets = $project->activeTargets()->where($column, 'like', '%' . $search . '%')->get();
    }

    /**
     * Execute the job.
     *
     * @return void
     */
    public function handle()
    {
        foreach ($this->targets as $target) {
            $target->is_archived = 1;
            $target->save();
        }

        AdminNotice::create([
            'type'    => 'success',
            'context' => __CLASS__,
            'message' => "Archived ".$this->targets->count()." targets",
        ]);
    }
}
